# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /policy/{name}:
        get:
            tags:
                - Policy
            description: Sends a greeting
            operationId: Policy_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/policy.v1.HelloReply'
    /policy1/name:
        get:
            tags:
                - Policy
            operationId: Policy_Create
            parameters:
                - name: meta.id
                  in: query
                  schema:
                    type: integer
                    format: uint64
                - name: meta.instanceID
                  in: query
                  schema:
                    type: string
                - name: meta.name
                  in: query
                  schema:
                    type: string
                - name: meta.createAt.seconds
                  in: query
                  description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                  schema:
                    type: integer
                    format: int64
                - name: meta.createAt.nanos
                  in: query
                  description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.
                  schema:
                    type: integer
                    format: int32
                - name: meta.updateAt.seconds
                  in: query
                  description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                  schema:
                    type: integer
                    format: int64
                - name: meta.updateAt.nanos
                  in: query
                  description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive.
                  schema:
                    type: integer
                    format: int32
                - name: username
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/policy.v1.CreatePolicyReply'
    /v1/login:
        post:
            tags:
                - Auth
            operationId: Auth_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/auth.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/auth.v1.LoginReply'
    /v1/secret:
        post:
            tags:
                - Secret
            operationId: Secret_CreateSecret
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/secret.v1.CreateSecretRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/secret.v1.CreateSecretReply'
    /v1/user:
        get:
            tags:
                - User
            operationId: User_Get
            parameters:
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: uint64
                - name: nickname
                  in: query
                  schema:
                    type: string
                - name: email
                  in: query
                  schema:
                    type: string
                - name: phone
                  in: query
                  schema:
                    type: string
                - name: status
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.UserReply'
        post:
            tags:
                - User
            operationId: User_Create
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.CreateUserReply'
components:
    schemas:
        auth.v1.LoginReply:
            type: object
            properties:
                token:
                    type: string
        auth.v1.LoginRequest:
            type: object
            properties:
                username:
                    type: string
                password:
                    type: string
        common.v1.ObjectMeta:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
                instanceID:
                    type: string
                name:
                    type: string
                extend:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/google.protobuf.Any'
                createAt:
                    type: string
                    format: date-time
                updateAt:
                    type: string
                    format: date-time
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        policy.v1.CreatePolicyReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
                instanceID:
                    type: string
                name:
                    type: string
                extendShadow:
                    type: object
                    additionalProperties:
                        $ref: '#/components/schemas/google.protobuf.Any'
                createAt:
                    type: string
                    format: date-time
                updateAt:
                    type: string
                    format: date-time
        policy.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        secret.v1.CreateSecretReply:
            type: object
            properties: {}
        secret.v1.CreateSecretRequest:
            type: object
            properties:
                expires:
                    type: integer
                    format: int64
        user.v1.CreateUserReply:
            type: object
            properties:
                id:
                    type: integer
                    format: uint64
        user.v1.CreateUserRequest:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/common.v1.ObjectMeta'
                status:
                    type: integer
                    format: int32
                nickname:
                    type: string
                password:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                isAdmin:
                    type: integer
                    format: int32
                totalPolicy:
                    type: integer
                    format: int64
                loginAt:
                    type: string
                    format: date-time
        user.v1.UserReply:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/common.v1.ObjectMeta'
                status:
                    type: integer
                    format: int32
                nickname:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                isAdmin:
                    type: integer
                    format: int32
                totalPolicy:
                    type: integer
                    format: int64
                loginAt:
                    type: string
                    format: date-time
tags:
    - name: Auth
      description: The greeting service definition.
    - name: Greeter
      description: The greeting service definition.
    - name: Policy
      description: The greeting service definition.
    - name: Secret
    - name: User
      description: The greeting service definition.
